scilla_version 1


library ZDExchange

let fee_ratio_kept = Uint128 997
let fee_ratio_denom = Uint128 1000
let one = Uint128 1

(* returns Uint128 *)
let input_price =
    fun (input_amount : Uint128) =>
    fun (input_reserve : Uint128) =>
    fun (output_reserve : Uint128) =>
        (* assert input_reserve > 0 and output_reserve > 0 *)
        let input_fee_kept = builtin mul input_amount fee_ratio_kept in
        let numerator = builtin mul input_fee_kept output_reserve in
        let input_reserve_denom = builtin mul input_reserve fee_ratio_denom in
        let denominator = builtin add input_reserve_denom input_fee_kept in
        builtin div numerator denominator

(* returns Uint128 *)
let output_price =
    fun (output_amount : Uint128) =>
    fun (input_reserve : Uint128) =>
    fun (output_reserve : Uint128) =>
        (* assert input_reserve > 0 and output_reserve > 0 *)
        let in_res_out_amount = builtin mul input_reserve output_amount in
        let numerator = builtin mul in_res_out_amount fee_ratio_denom in
        let out_res_amount = builtin sub output_reserve output_amount in
        let denominator = builtin mul out_res_amount fee_ratio_kept in
        let ratio = builtin div numerator denominator in
        builtin add ratio one

contract ZDExchange
()

field tokenCount : Uint128 = Uint128 0
field id_to_token : Map Uint128 ByStr20 = Emp Uint128 ByStr20
field token_names : Map ByStr20 String = Emp ByStr20 String
field token_symbols : Map ByStr20 String = Emp ByStr20 String
field token_decimals : Map ByStr20 Uint128 = Emp ByStr20 Uint128
field token_totalSupplies : Map ByStr20 Uint128 = Emp ByStr20 Uint128
field token_balances : Map ByStr20 (Map ByStr20 Uint128) = Emp ByStr20 (Map ByStr20 Uint128)
field token_allowances : Map ByStr20 (Map ByStr20 (Map ByStr20 Uint128)) = Emp ByStr20 (Map ByStr20 (Map ByStr20 Uint128))

transition CreateMarket (token : ByStr20)
    (* Modifies fields tokenCount, id_to_token, token_names, token_symbols, *)
    (* token_decimals, token_totalSupplies, token_balances, token_allowances *)
end

transition AddLiquidity (token : ByStr20, min_liquidity : Uint128,
        max_tokens : Uint128, deadline : BNum)
    (* payable *)
    (* Modifies fields token_totalSupplies, token_balances *)
    (* returns Uint128 *)
end

transition RemoveLiquidity (token : ByStr20, min_zil : Uint128,
        deadline : BNum, recipient : ByStr20)
    (* Modifies fields token_totalSupplies, token_balances *)
    (* returns Uint128 *)
    (* sends funds *)
end

transition ZilToTokenSwapInput (token : ByStr20, min_tokens : Uint128,
        deadline : BNum)
    (* payable *)
    (* calls FungibleToken.Transfer() *)
    (* returns Uint128 *)
end

transition ZilToTokenTransferInput (token : ByStr20, min_tokens : Uint128,
        deadline : BNum, recipient : ByStr20)
    (* payable *)
    (* calls FungibleToken.Transfer() *)
    (* returns Uint128 *)
end

transition ZilToTokenSwapOutput (token : ByStr20, tokens_bought : Uint128,
        deadline : BNum)
    (* payable *)
    (* calls FungibleToken.Transfer() *)
    (* returns Uint128 *)
end

transition ZilToTokenTransferOutput(token : ByStr20, tokens_bought : Uint128,
        deadline : BNum, recipient : ByStr20)
    (* payable *)
    (* calls FungibleToken.Transfer() *)
    (* returns Uint128 *)
end

transition TokenToZilSwapInput (token : ByStr20, tokens_sold : Uint128,
        min_zil : Uint128, deadline : BNum)
    (* calls FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
    (* sends funds *)
end

transition TokenToZilTransferInput (token : ByStr20, tokens_sold : Uint128,
        min_zil : Uint128, deadline : BNum, recipient : ByStr20)
    (* calls FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
    (* sends funds *)
end

transition TokenToZilSwapOutput (token : ByStr20, zil_bought : Uint128,
        max_tokens : Uint128, deadline : BNum)
    (* calls FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
end

transition TokenToZilTransferOutput (token : ByStr20, zil_bought : Uint128,
        max_tokens : Uint128, deadline : BNum, recipient : ByStr20)
    (* calls FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
end

transition TokenToTokenSwapInput (token : ByStr20, tokens_sold : Uint128,
        min_tokens_bought : Uint128, min_zil_bought : Uint128,
        deadline : BNum, token_other : ByStr20)
    (* calls FungibleToken.Transfer(), FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
end

transition TokenToTokenTransferInput(token : ByStr20, tokens_sold : Uint128,
        min_tokens_bought : Uint128, min_zil_bought : Uint128,
        deadline : BNum, token_other : ByStr20, recipient : ByStr20)
    (* calls FungibleToken.Transfer(), FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
end

transition TokenToTokenSwapOutput (token : ByStr20, tokens_bought : Uint128,
        max_tokens_sold : Uint128, max_zil_sold : Uint128,
        deadline : BNum, token_other : ByStr20)
    (* calls FungibleToken.Transfer(), FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
end

transition TokenToTokenTransferOutput (token : ByStr20, tokens_bought : Uint128,
        max_tokens_sold : Uint128, max_zil_sold : Uint128,
        deadline : BNum, token_other : ByStr20, recipient : ByStr20)
    (* calls FungibleToken.Transfer(), FungibleToken.TransferFrom() *)
    (* returns Uint128 *)
end

transition Transfer (token : ByStr20, to: ByStr20, tokens : Uint128)
    (* Modifies field token_balances *)
    (* returns Bool *)
end

transition TransferFrom (token : ByStr20, from : ByStr20, to: ByStr20,
        tokens : Uint128)
    (* Modifies field token_balances *)
    (* returns Bool *)
end

transition Approve (token : ByStr20, spender : ByStr20, tokens : Uint128)
    (* Modifies field token_allowances *)
    (* returns Bool *)
end

(** Constant Transitions **)

transition ZilToTokenInputPrice (token : ByStr20, zil_sold : Uint128)
    (* returns Uint128 *)
end

transition ZilToTokenOutputPrice (token : ByStr20, tokens_sold : Uint128)
    (* returns Uint128 *)
end

transition TokenToZilInputPrice (token : ByStr20, tokens_sold : Uint128)
    (* returns Uint128 *)
end

transition TokenToZilOutputPrice (token : ByStr20, zil_bought : Uint128)
    (* returns Uint128 *)
end

transition TokenAddress (token_id : Uint128)
    (* returns ByStr20 *)
end

transition BalanceOf (token : ByStr20, tokenOwner : Uint128)
    (* returns Uint128 *)
end

transition Allowance (token : ByStr20, tokenOwner : ByStr20, spender : ByStr20)
    (* returns Uint128 *)
end
